// GENERATED CODE. DO NOT MODIFY. Generated by IsolateGenerator.

// Header specified in build.yaml.
import 'package:example/isolate/isolate.dart';
import 'dart:async';
import 'dart:isolate';

//Classes
class $HelloWorldIsolateIIsolate {
  final SendPort port;
  final String from;
  const $HelloWorldIsolateIIsolate({
    required this.port,
    required this.from,
  });
}

class IsolateIInterface extends IsolateI {
  SendPort sendPort;
  IsolateIInterface(this.sendPort);
  @override
  Future<void> helloWorld(String from) async {
    ReceivePort port = ReceivePort();
    sendPort.send($HelloWorldIsolateIIsolate(port: port.sendPort, from: from));
    return await port.first;
  }
}

Future<void> testIsolateParser(SendPort sendPort) async {
  ReceivePort receivePort = ReceivePort();
  sendPort.send(receivePort.sendPort);
  initFunction();

  final IsolateI instanceIsolateI = IsolateImpl();

  await for (var object in receivePort) {
    switch (object.runtimeType) {
      case $HelloWorldIsolateIIsolate:
        object = object as $HelloWorldIsolateIIsolate;
        final result = await instanceIsolateI.helloWorld(object.from);

        object.port.send(true);
        break;
      default:
    }
  }
}

// Footer specified in build.yaml.
